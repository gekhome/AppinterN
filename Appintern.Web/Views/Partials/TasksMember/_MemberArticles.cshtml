
@using Appintern.Web.ViewModels

@{
    ViewBag.Title = "News & Events";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}

<div class="page-header" style="margin:5px 60px 5px 60px;width:100%">
    <span style="margin:5px 5px 5px 5px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">News &amp; Events Articles</font>
    </span>
    <span style="margin:5px 60px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">
        @Html.ActionLink("Return to Main", "RenderTasksMain", "TasksMember", null, new { @class = "btn btn-warning", style = "font-size:14px" })
    </span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Refresh</button>
</div>

<div class="body-content" style="margin:20px 60px 5px 60px;">
    @(Html.Kendo().Grid<UmbracoArticleModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.ArticleId).Width(10).Filterable(false);
            columns.Bound(c => c.ArticleDate).Width(25);
            columns.Bound(c => c.ArticleName).Width(30);
            columns.Bound(c => c.Title).Width(40);
            columns.Bound(c => c.AuthorName).Width(30);
            columns.Bound(c => c.MetaName).Width(30);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(30);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("MemberArticleEdit", "TasksMember") + "?articleId=#=ArticleId#' target = _blank>Details</a>"
            ).Width(15);
                        columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("MemberArticleImage", "TasksMember") + "?articleId=#=ArticleId#' target = _blank>Image</a>"
            ).Width(15);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("MemberArticleContent", "TasksMember") + "?articleId=#=ArticleId#' target = _blank>Content</a>"
            ).Width(18);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Navigatable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Filterable()
        .HtmlAttributes(new { style = "display: block;font-size:14px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(500))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.ArticleId);
            model.Field(p => p.ArticleId).Editable(false);
        })
        .Read(read => read.Action("UmbracoArticle_Read", "TasksMember"))
        .Create(create => create.Action("UmbracoArticle_Create", "TasksMember"))
        .Update(update => update.Action("UmbracoArticle_Update", "TasksMember"))
        .Destroy(destroy => destroy.Action("UmbracoArticle_Destroy", "TasksMember"))
        .Events(events => events.Error("error_handler"))
        )
        )
</div>

<script type="text/javascript">
    //set current to the "en-GB" culture script. Required!
    kendo.culture("en-GB");
</script>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
        $("#Grid").data("kendoGrid").dataSource.read();
    }

</script>