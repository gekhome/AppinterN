@model IEnumerable<MemberCountModel>

@using Appintern.Web.ViewModels;
@using Appintern.Web.Library

@{
    int HOME_PAGE_ID = 1080;
    int hits = HitCounter.GetViewCount(HOME_PAGE_ID);
}


<style>
    img.box-shadow {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.3);
    }
</style>

@section HeadContent
{
    <style>
        #gauge-outer {
            background: url(@Url.Content("~/Images/gauge-container-partial.png")) no-repeat 50% 50%;
            width: 386px;
            height: 386px;
            text-align: center;
            margin: 0 auto 30px auto;
        }

        #gauge {
            width: 350px;
            height: 300px;
            margin: 0 auto;
            border-color: transparent;
        }

        #gauge-container .k-slider {
            margin-top: -11px;
            width: 140px;
        }
    </style>
}

<div class="placeholders">
    <div class="row d-flex justify-content-start">
        <div class="col-md-2 mb-3 placeholder">
            <img class="img-fluid box-shadow" alt="developers" src="@Url.Content("~/Images/developers-women.jpg")" width="300" heght="200">
        </div>
        <div class="col-md-2">
            <h2>Members Url slugs</h2>
            <p>
                This function updates the property named 'UrlSlug' for each member.
                This property is used for navigatig to the member's profile accessible
                as a link to the address '/members/{urlSlug}'. The valuse of this property
                is normally set when submitting the signup form.
            </p>
            <p>
                @(Html.Kendo()
                .Button()
                .Name("PrimaryButton")
                .Content("Update all members url slugs")
                .HtmlAttributes(new { @class = "textButton k-primary" } )
                .Events(e => e.Click("updateUrlSlugs"))
                )
            </p>
        </div>

        <div class="col-md-4">
            <div class="demo-section k-content wide">
                @(Html.Kendo().Chart(Model)
                .Name("chart")
                .Title(title => title
                .Text("Distribution of Registered Member Types")
                .Position(ChartTitlePosition.Bottom))
                .Legend(legend => legend
                .Visible(false))
                .ChartArea(chart => chart
                .Background("transparent"))
                //.HtmlAttributes(new { style = "background: center no-repeat url(" + @Url.Content("~/Images/world-map.png") })
                .Series(series => {
                    series.Pie(
                        model => model.Percentage,
                        model => model.MemberType,
                        model => model.Color,
                        model => model.Explode)
                    .Labels(labels => labels
                    .Template("#= category #: \n #= value#%")
                    .Background("transparent")
                    .Visible(true))
                    .StartAngle(150);
                })
                .Tooltip(tooltip => tooltip.Visible(true).Format("{0}%"))
                )
            </div>
        </div>
        <div class="col-md-4" id="gauge-outer" style="display:block">
            <div id="gauge-container" style="margin-top:20px">
                @(Html.Kendo().RadialGauge()
                .Name("gauge")
                .Pointer(pointer => pointer.Value(hits))
                .Scale(scale => scale
                    .MinorUnit(5)
                    .StartAngle(-30)
                    .EndAngle(210)
                    .Max(5*hits)
                    .Labels(labels => labels
                        .Position(GaugeRadialScaleLabelsPosition.Inside)
                    )
                    .Ranges(ranges => {
                        ranges.Add().From(2*hits).To(3*hits).Color("#ffc700");
                        ranges.Add().From(3*hits).To(4*hits).Color("#ff7a00");
                        ranges.Add().From(4*hits).To(5*hits).Color("#c20000");
                    })
                    )
                )
            </div>
            <div>
                <label style="margin-top:10px;float:right;margin-right:200px;background-color:transparent">Current number of site visits</label>
            </div>
            <div id="gauge-container2" style="margin-top:0px;float:right;margin-right:200px;background-color:transparent">
                @(Html.Kendo().Slider()
                .Name("gauge-value")
                .HtmlAttributes(new { style="max-width:80px"})
                .Value(hits)
                .Min(0)
                .Max(5*hits)
                .TickPlacement(SliderTickPlacement.None)
                .ShowButtons(false)
                .Events(e => e.Change("change"))
                .HtmlAttributes(new { title = "slider" })
                )
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="page-header" style="margin:5px 30px 5px 30px">
        <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
            <font style="color:#494949;float:left;font-family:'Segoe UI'">Members login data</font>
        </span>
    </div>
    <div class="col-12">
        @(Html.Kendo().Grid<Appintern.Web.ViewModels.UMember>()
            .Name("grid")
            .Columns(columns =>
            {
            columns.Bound(c => c.Id).Width(20).Groupable(false);
            columns.Bound(c => c.Key).Width(40).Groupable(false)
                .ClientFooterTemplate("Grand total: #=count#")
                .ClientGroupFooterTemplate("Total: #=count#");
            columns.Bound(c => c.Name).Width(50).Groupable(false);
            columns.Bound(c => c.Login).Width(20).Groupable(false);
            columns.Bound(c => c.Group).Width(20);
            columns.Bound(c => c.Email).Width(30).Groupable(false);
            columns.Bound(c => c.LastLogin).Width(20).Format("{0:dd/MM/yyyy}").Groupable(false);
            })
            .Pageable()
            .Sortable()
            .Groupable()
            .HtmlAttributes(new { style = "display: block;font-size:13px" })
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .Scrollable()
            .Filterable()
            .HtmlAttributes(new { style = "height:500px;" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(40)
                .Read(read => read.Action("Members_Read", "Backend"))
                .Aggregates(a =>
                {
                a.Add(p => p.Key).Count();
                })
            )
        )
    </div>
</div>

<script>

    kendo.culture("en-GB");

    function change(e) {
        $("#gauge").data("kendoRadialGauge").value($("#gauge-value").val());
    }

    function updateUrlSlugs() {

        var text = "Do you want to update the url slugs for all members?";
        MessageBoxConfirm(text, "Message").done(function () {
            $.ajax({
            url: '@Url.Action("UpdateUrlSLugForAllMembers", "Content")',
            type: 'GET',
            data: "",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data) alert(data);
            },
            error: function () {
                alert("Error processing the request. Try again later.");
            }
            });
        }).fail(function () {
            return;
        });

    }

</script>