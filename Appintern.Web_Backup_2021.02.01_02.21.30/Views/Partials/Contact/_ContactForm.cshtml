@inherits UmbracoViewPage<ContactViewModel>

@using Appintern.Core.Models

<div id="form-outer">
    <div id="user-login">
        <div class="container form-header">
            <img src="~/Images/user-circle-gray.png" width="100" height="70" style="margin:10px 20px 0px 10px" />
            <font class="form-title">Contact us</font>
            <hr class="form-line" />
        </div>
        @using (Ajax.BeginForm("SubmitForm", "ContactSurface", new AjaxOptions()
        {
            UpdateTargetId = "form-result",
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            OnSuccess = "contactForm.showResult",
            OnFailure = "contactForm.showResult"
        }, new { id = "contact-form" }))
        {
            <div class="input-group">
                <span class="input-group-addon">
                    <span class="icon glyphicon glyphicon-user"></span>
                </span>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
            <div class="input-group">
                <span class="input-group-addon">
                    <span class="icon glyphicon glyphicon-envelope"></span>
                </span>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="input-group">
                <span class="input-group-addon">
                    <span class="icon glyphicon glyphicon-th-list"></span>
                </span>
                @Html.TextBoxFor(m => m.Subject, new { @class = "form-control", placeholder = "Subject" })
                @Html.ValidationMessageFor(m => m.Subject)
            </div>
            <div class="form-group">
                @Html.TextAreaFor(m => m.Message, new { @class = "form-control", placeholder = "Message", rows = "14" })
                @Html.ValidationMessageFor(m => m.Message)
            </div>
            <div class="form-group">
                <button class="btn btn-primary" type="submit">send </button>
                <button class="btn btn-success" type="reset" onclick="refreshPage()">reset </button>
            </div>
        }
    </div>
</div>

<div id="form-result"></div>

<script type="text/javascript">

    function refreshPage() {
        window.location.reload(true);
    }

</script>